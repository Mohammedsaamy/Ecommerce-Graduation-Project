// <auto-generated />
using System;
using Group_4_Intake_44.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Group_4_Intake_44.Migrations
{
    [DbContext(typeof(gis44_SupplyChainContext))]
    [Migration("20240622233937_addressnull")]
    partial class addressnull
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Group_4_Intake_44.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Group_4_Intake_44.Models.Brand", b =>
                {
                    b.Property<int>("Brand_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Brand_ID"));

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Brand_ID");

                    b.ToTable("Brand");

                    b.HasData(
                        new
                        {
                            Brand_ID = 1,
                            Name = "Apple"
                        },
                        new
                        {
                            Brand_ID = 2,
                            Name = "ASUS"
                        },
                        new
                        {
                            Brand_ID = 3,
                            Name = "HP"
                        },
                        new
                        {
                            Brand_ID = 4,
                            Name = "Lenovo"
                        },
                        new
                        {
                            Brand_ID = 5,
                            Name = "Dell"
                        },
                        new
                        {
                            Brand_ID = 6,
                            Name = "Samsung"
                        },
                        new
                        {
                            Brand_ID = 7,
                            Name = "Xiaomi"
                        },
                        new
                        {
                            Brand_ID = 8,
                            Name = "Huawei"
                        },
                        new
                        {
                            Brand_ID = 9,
                            Name = "LG"
                        });
                });

            modelBuilder.Entity("Group_4_Intake_44.Models.Cart_Item", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("ProductID")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int?>("ShoppingCartID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ProductID");

                    b.HasIndex("ShoppingCartID");

                    b.ToTable("Cart Items");
                });

            modelBuilder.Entity("Group_4_Intake_44.Models.Category", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Name = "Laptops"
                        },
                        new
                        {
                            ID = 2,
                            Name = "SmartPhone"
                        },
                        new
                        {
                            ID = 3,
                            Name = "SmartWatch"
                        },
                        new
                        {
                            ID = 4,
                            Name = "TVs"
                        },
                        new
                        {
                            ID = 5,
                            Name = "Wierless Headphone"
                        });
                });

            modelBuilder.Entity("Group_4_Intake_44.Models.OrderHeader", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Adderss")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ApplicationUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("OrderTotal")
                        .HasColumnType("float");

                    b.Property<string>("PickupEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PickupName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PickupPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("StripePaymentIntelID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TotalItems")
                        .HasColumnType("int");

                    b.Property<int?>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ApplicationUserId");

                    b.ToTable("OrderHeader");
                });

            modelBuilder.Entity("Group_4_Intake_44.Models.Order_Item", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("OrederHearderID")
                        .HasColumnType("int");

                    b.Property<double?>("Price")
                        .HasColumnType("float");

                    b.Property<int?>("ProductID")
                        .HasColumnType("int");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("OrederHearderID");

                    b.HasIndex("ProductID");

                    b.ToTable("Order Items");
                });

            modelBuilder.Entity("Group_4_Intake_44.Models.Product", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("BrandID")
                        .HasColumnType("int");

                    b.Property<int?>("CategoryID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Price")
                        .HasColumnType("float");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("SpecialTag")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("BrandID");

                    b.HasIndex("CategoryID");

                    b.ToTable("Product");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            BrandID = 1,
                            CategoryID = 1,
                            Description = "Apple MacBook Air - M1 chip with 8-core CPU and 7-core GPU - 8GB - 256GB - M1 chip -13 inch - MacOs - Space Grey",
                            Image = "https://smhttp-ssl-73217.nexcesscdn.net/pub/media/catalog/product/cache/661473ab953cdcdf4c3b607144109b90/z/a/za138.png",
                            Name = "Apple MacBook Air - M1 chip",
                            Price = 47999.0,
                            Quantity = 5,
                            SpecialTag = " "
                        },
                        new
                        {
                            ID = 2,
                            BrandID = 1,
                            CategoryID = 1,
                            Description = "Apple Macbook Air M2 Laptop - M2 chip 8 Cores CPU With 8 Cores GPU - 8GB - 256 GB - 13 inch - Space Gray",
                            Image = "https://smhttp-ssl-73217.nexcesscdn.net/pub/media/catalog/product/cache/08a84a1c53d21da95cee3377f8156b2c/z/a/za508.png",
                            Name = "Apple Macbook Air - M2 chip",
                            Price = 65999.0,
                            Quantity = 3,
                            SpecialTag = " "
                        },
                        new
                        {
                            ID = 3,
                            BrandID = 1,
                            CategoryID = 1,
                            Description = "Apple Macbook Pro M3 - 8 Cores CPU With 10 Cores GPU - 8GB - 512GB SSD - 14 inch MacOs - Silver",
                            Image = "https://smhttp-ssl-73217.nexcesscdn.net/pub/media/catalog/product/cache/08a84a1c53d21da95cee3377f8156b2c/z/a/za208.png",
                            Name = "Apple Macbook Pro M3",
                            Price = 107999.0,
                            Quantity = 2,
                            SpecialTag = " "
                        },
                        new
                        {
                            ID = 4,
                            BrandID = 2,
                            CategoryID = 1,
                            Description = "ASUS TUF Gaming F15 FA507VV4-LP105W Laptop - Intel® Core™ i9-13900H - 16GB - 512GB SSD - NVIDIA® GeForce® RTX™ 4060 8GB - 15.6'' FHD - Win11 - Gray",
                            Image = "https://smhttp-ssl-73217.nexcesscdn.net/pub/media/catalog/product/cache/08a84a1c53d21da95cee3377f8156b2c/z/u/zu617-1.png",
                            Name = "ASUS TUF Gaming F15",
                            Price = 69999.0,
                            Quantity = 4,
                            SpecialTag = " "
                        },
                        new
                        {
                            ID = 5,
                            BrandID = 2,
                            CategoryID = 1,
                            Description = "ASUS Zenbook 14 OLED UX3405MA-PP381WS Laptop - Intel® Core™ Ultra 7-155H - 16GB - 1TB SSD - Intel® Arc™ Graphics - 14.0'' OLED - Win11 - Ponder Blue",
                            Image = "https://smhttp-ssl-73217.nexcesscdn.net/pub/media/catalog/product/cache/08a84a1c53d21da95cee3377f8156b2c/z/u/zu462-1_1.png",
                            Name = "ASUS Zenbook 14 OLED",
                            Price = 77999.0,
                            Quantity = 3,
                            SpecialTag = " "
                        },
                        new
                        {
                            ID = 6,
                            BrandID = 2,
                            CategoryID = 1,
                            Description = "ASUS Zenbook 13 OLED UX5304MA-NQ007WS Laptop - Intel® Ultra 7-155U - 16GB - 1TB SSD - Intel® Iris Xe Graphics - 13.3 FHD OLED - Win11 - Ponder Blude",
                            Image = "https://smhttp-ssl-73217.nexcesscdn.net/pub/media/catalog/product/cache/08a84a1c53d21da95cee3377f8156b2c/z/u/zu465.png",
                            Name = "ASUS Zenbook 13 OLED",
                            Price = 60599.0,
                            Quantity = 4,
                            SpecialTag = " "
                        },
                        new
                        {
                            ID = 7,
                            BrandID = 3,
                            CategoryID = 1,
                            Description = "HP EliteBook 840 G8 Laptop - Intel® Core™ i7-1165G7 - 8 GB - 512GB SSD - Intel® Iris® Xᵉ Graphics - 14” FHD - Windows 11 Pro - Silver",
                            Image = "https://smhttp-ssl-73217.nexcesscdn.net/pub/media/catalog/product/cache/661473ab953cdcdf4c3b607144109b90/z/i/zi058-1-2b_2_1.jpg",
                            Name = "HP EliteBook 840 G8 Laptop",
                            Price = 59999.0,
                            Quantity = 3,
                            SpecialTag = " "
                        },
                        new
                        {
                            ID = 8,
                            BrandID = 3,
                            CategoryID = 1,
                            Description = "HP ENVY x360 13-bf0001ne Laptop - Intel® Core™ i7-1250U - 16GB - 1TB SSD - Intel® Iris® Xᵉ Graphics - 13.3 WUXGA - Win11 - Natural Silver",
                            Image = "https://smhttp-ssl-73217.nexcesscdn.net/pub/media/catalog/product/cache/661473ab953cdcdf4c3b607144109b90/z/h/zh392-1-2bjpg.jpg",
                            Name = "HP ENVY x360 13-bf0001ne Laptop ",
                            Price = 59799.0,
                            Quantity = 5,
                            SpecialTag = " "
                        },
                        new
                        {
                            ID = 9,
                            BrandID = 3,
                            CategoryID = 1,
                            Description = "HP ProBook 450 G9 Laptop - Intel® Core™ i7-1255U - 8GB - 512GB SSD - NVIDIA® GeForce® MX570 - 15.6 HD - Silver Aluminum",
                            Image = "https://smhttp-ssl-73217.nexcesscdn.net/pub/media/catalog/product/cache/661473ab953cdcdf4c3b607144109b90/z/h/zh897-1-2b_1.jpg",
                            Name = "HP ProBook 450 G9 Laptop",
                            Price = 45999.0,
                            Quantity = 3,
                            SpecialTag = " "
                        },
                        new
                        {
                            ID = 10,
                            BrandID = 4,
                            CategoryID = 1,
                            Description = "Lenovo Legion 7 Pro 16IRX8H Laptop - Intel® Core™ i9-13900HX -32GB - 1TBSSD - NVIDIA® GeForce RTX™ 4090 16GB - 16 WQXGA - Win11 - Onyx Grey",
                            Image = "https://smhttp-ssl-73217.nexcesscdn.net/pub/media/catalog/product/cache/661473ab953cdcdf4c3b607144109b90/z/l/zl880-new.png",
                            Name = "Lenovo Legion 7 Pro",
                            Price = 165999.0,
                            Quantity = 5,
                            SpecialTag = " "
                        },
                        new
                        {
                            ID = 11,
                            BrandID = 4,
                            CategoryID = 1,
                            Description = "Lenovo Legion 5 16IRX9 Laptop - Intel® Core™ i7-14650HX - 16GB - 1TB SSD - NVIDIA® GeForce RTX™ 4060 8GB - 16 WQXGA - Win11 - Luna Grey",
                            Image = "https://smhttp-ssl-73217.nexcesscdn.net/pub/media/catalog/product/cache/661473ab953cdcdf4c3b607144109b90/z/l/zl420-new.png",
                            Name = "Lenovo Legion 5 16IRX9",
                            Price = 89999.0,
                            Quantity = 4,
                            SpecialTag = " "
                        },
                        new
                        {
                            ID = 12,
                            BrandID = 4,
                            CategoryID = 1,
                            Description = "Lenovo ThinkPad-E14 Laptop - Intel® Core™ i7-1355U - 8GB - 512GB SSD - NVIDIA® Geforce MX550 2GB - 14.0 FHD - Graphite Black",
                            Image = "https://smhttp-ssl-73217.nexcesscdn.net/pub/media/catalog/product/cache/661473ab953cdcdf4c3b607144109b90/z/l/zl415-1_1.png",
                            Name = "Lenovo ThinkPad-E14",
                            Price = 58999.0,
                            Quantity = 6,
                            SpecialTag = " "
                        },
                        new
                        {
                            ID = 13,
                            BrandID = 4,
                            CategoryID = 1,
                            Description = "Lenovo IdeaPad 5 15ITL05 Laptop - Intel® Core™ i7-1165G7 - 8GB - 512 SSD - NVIDIA® GeForce MX450 2GB - 15.6 FHD - Grey",
                            Image = "https://smhttp-ssl-73217.nexcesscdn.net/pub/media/catalog/product/cache/d33f1c152d6eb7e8608a208d80f21a14/z/l/zl350-2b-1y.jpg",
                            Name = "Lenovo IdeaPad 5",
                            Price = 31999.0,
                            Quantity = 6,
                            SpecialTag = " "
                        },
                        new
                        {
                            ID = 14,
                            BrandID = 5,
                            CategoryID = 1,
                            Description = "Skip to the beginning of the images gallery Dell Latitude 5430 XCTO Laptop - Intel® Core™ i7-1265U vPro - 16 GB - 512 GB SSD - Intel Iris Xe Graphics -14” FHD - Silver",
                            Image = "https://smhttp-ssl-73217.nexcesscdn.net/pub/media/catalog/product/cache/08a84a1c53d21da95cee3377f8156b2c/z/d/zd062-edited.jpg",
                            Name = "Dell Latitude 5430 XCTO",
                            Price = 639000.0,
                            Quantity = 3,
                            SpecialTag = " "
                        },
                        new
                        {
                            ID = 15,
                            BrandID = 5,
                            CategoryID = 1,
                            Description = "Dell Gaming 5530 G15 Laptop - Intel® Core™ i7-13650HX - 16GB - 512GB SSD - NVIDIA® GeForce RTX™ 3050 6GB - 15.6 FHD - Win 10 - Dark Shadow Grey",
                            Image = "https://smhttp-ssl-73217.nexcesscdn.net/pub/media/catalog/product/cache/08a84a1c53d21da95cee3377f8156b2c/z/d/zd190.png",
                            Name = "Dell Gaming 5530 G15",
                            Price = 50999.0,
                            Quantity = 5,
                            SpecialTag = " "
                        },
                        new
                        {
                            ID = 16,
                            BrandID = 1,
                            CategoryID = 2,
                            Description = "The iPhone 15 Pro Max display has rounded corners that follow a beautiful curved design, and these corners are within a standard rectangle. When measured as a standard rectangular shape, the screen is 6.69 inches diagonally",
                            Image = "https://smhttp-ssl-73217.nexcesscdn.net/pub/media/catalog/product/cache/08a84a1c53d21da95cee3377f8156b2c/m/a/ma645-1.jpg",
                            Name = "Apple iPhone 15 Pro Max 256GB - Black",
                            Price = 66999.0,
                            Quantity = 10,
                            SpecialTag = " "
                        },
                        new
                        {
                            ID = 17,
                            BrandID = 1,
                            CategoryID = 2,
                            Description = "The iPhone 15 Pro display has rounded corners that follow a beautiful curved design, and these corners are within a standard rectangle. When measured as a standard rectangular shape, the screen is 6.12 inches diagonally",
                            Image = "https://smhttp-ssl-73217.nexcesscdn.net/pub/media/catalog/product/cache/08a84a1c53d21da95cee3377f8156b2c/m/a/ma762-1_1.jpg",
                            Name = "Apple iPhone 15 Pro - 128GB - Black",
                            Price = 42999.0,
                            Quantity = 8,
                            SpecialTag = " "
                        },
                        new
                        {
                            ID = 18,
                            BrandID = 1,
                            CategoryID = 2,
                            Description = "The iPhone 14 display has rounded corners that follow a beautiful curved design, and these corners are within a standard rectangle",
                            Image = "https://smhttp-ssl-73217.nexcesscdn.net/pub/media/catalog/product/cache/661473ab953cdcdf4c3b607144109b90/i/p/iphone14-6.jpg",
                            Name = "Apple iPhone 14 - 128GB - Blue",
                            Price = 35999.0,
                            Quantity = 12,
                            SpecialTag = " "
                        },
                        new
                        {
                            ID = 19,
                            BrandID = 1,
                            CategoryID = 3,
                            Description = "",
                            Image = "https://smhttp-ssl-73217.nexcesscdn.net/pub/media/catalog/product/cache/08a84a1c53d21da95cee3377f8156b2c/w/t/wt705-1-min.jpg",
                            Name = "Apple Watch Ultra 49MM Titanium -",
                            Price = 44999.0,
                            Quantity = 5,
                            SpecialTag = " "
                        },
                        new
                        {
                            ID = 20,
                            BrandID = 1,
                            CategoryID = 3,
                            Description = "",
                            Image = "https://smhttp-ssl-73217.nexcesscdn.net/pub/media/catalog/product/cache/08a84a1c53d21da95cee3377f8156b2c/w/t/wt305-1.jpg",
                            Name = "Apple Watch Ultra 49MM Titanium Case Black Alpine Loop",
                            Price = 44999.0,
                            Quantity = 7,
                            SpecialTag = " "
                        },
                        new
                        {
                            ID = 21,
                            BrandID = 6,
                            CategoryID = 2,
                            Description = "Samsung Galaxy A15 - 8GB RAM - 256GB - Blue Black",
                            Image = "https://smhttp-ssl-73217.nexcesscdn.net/pub/media/catalog/product/cache/08a84a1c53d21da95cee3377f8156b2c/b/l/black-min_3.jpg",
                            Name = "Samsung Galaxy A15",
                            Price = 8799.0,
                            Quantity = 15,
                            SpecialTag = " "
                        },
                        new
                        {
                            ID = 22,
                            BrandID = 6,
                            CategoryID = 2,
                            Description = "Samsung Galaxy Tab A9 - 4GB RAM - 64GB - Navy",
                            Image = "https://smhttp-ssl-73217.nexcesscdn.net/pub/media/catalog/product/cache/08a84a1c53d21da95cee3377f8156b2c/z/g/zg749-1.jpg",
                            Name = "Samsung Galaxy Tab A9",
                            Price = 7899.0,
                            Quantity = 20,
                            SpecialTag = " "
                        },
                        new
                        {
                            ID = 23,
                            BrandID = 6,
                            CategoryID = 2,
                            Description = "Samsung Galaxy A34 - 8GB RAM - 256GB - Black",
                            Image = "https://smhttp-ssl-73217.nexcesscdn.net/pub/media/catalog/product/cache/08a84a1c53d21da95cee3377f8156b2c/s/a/samsung_galaxy_a34-black_0003_layer_1_1.jpg",
                            Name = "Samsung Galaxy A34",
                            Price = 14899.0,
                            Quantity = 10,
                            SpecialTag = " "
                        },
                        new
                        {
                            ID = 24,
                            BrandID = 6,
                            CategoryID = 2,
                            Description = "Samsung Galaxy A55 5G - 8GB RAM - 128GB - Ice BLUE",
                            Image = "https://smhttp-ssl-73217.nexcesscdn.net/pub/media/catalog/product/cache/08a84a1c53d21da95cee3377f8156b2c/z/g/zg.png",
                            Name = "Samsung Galaxy A55 5G",
                            Price = 21999.0,
                            Quantity = 12,
                            SpecialTag = " "
                        },
                        new
                        {
                            ID = 25,
                            BrandID = 7,
                            CategoryID = 2,
                            Description = "Xiaomi Redmi 10C - 4GB RAM - 64GB - Green",
                            Image = "https://smhttp-ssl-73217.nexcesscdn.net/pub/media/catalog/product/cache/08a84a1c53d21da95cee3377f8156b2c/x/i/xiaomi-redmi-note-12-3_1.jpg",
                            Name = "Xiaomi Redmi 10C",
                            Price = 8899.0,
                            Quantity = 15,
                            SpecialTag = " "
                        },
                        new
                        {
                            ID = 26,
                            BrandID = 7,
                            CategoryID = 2,
                            Description = "Xiaomi Redmi Note 12 - 6GB RAM - 128GB - Sunrise Gold",
                            Image = "https://smhttp-ssl-73217.nexcesscdn.net/pub/media/catalog/product/cache/08a84a1c53d21da95cee3377f8156b2c/x/i/xiaomi-redmi-note--sunrise-gold-1_1.jpg",
                            Name = "Xiaomi Redmi Note 12",
                            Price = 7799.0,
                            Quantity = 10,
                            SpecialTag = " "
                        },
                        new
                        {
                            ID = 27,
                            BrandID = 7,
                            CategoryID = 2,
                            Description = "Xiaomi Redmi Pad 6 - 8GB RAM - 256GB - Grey",
                            Image = "https://smhttp-ssl-73217.nexcesscdn.net/pub/media/catalog/product/cache/08a84a1c53d21da95cee3377f8156b2c/z/r/zr610-1.jpg",
                            Name = "Xiaomi Redmi Pad 6",
                            Price = 17999.0,
                            Quantity = 5,
                            SpecialTag = " "
                        },
                        new
                        {
                            ID = 28,
                            BrandID = 7,
                            CategoryID = 3,
                            Description = "Xiaomi Redmi Pad 6 - 8GB RAM - 256GB - Grey",
                            Image = "https://smhttp-ssl-73217.nexcesscdn.net/pub/media/catalog/product/cache/08a84a1c53d21da95cee3377f8156b2c/w/t/wt206-10-min.jpg",
                            Name = "Xiaomi Watch S1 - Black",
                            Price = 7499.0,
                            Quantity = 15,
                            SpecialTag = " "
                        },
                        new
                        {
                            ID = 29,
                            BrandID = 8,
                            CategoryID = 3,
                            Description = "",
                            Image = "https://smhttp-ssl-73217.nexcesscdn.net/pub/media/catalog/product/cache/08a84a1c53d21da95cee3377f8156b2c/w/t/wt044-1-min_1.jpg",
                            Name = "Huawei Band 7 - Black (PH Warranty)",
                            Price = 1999.0,
                            Quantity = 6,
                            SpecialTag = " "
                        },
                        new
                        {
                            ID = 30,
                            BrandID = 8,
                            CategoryID = 2,
                            Description = "",
                            Image = "https://smhttp-ssl-73217.nexcesscdn.net/pub/media/catalog/product/cache/08a84a1c53d21da95cee3377f8156b2c/h/u/huawei-nova-10-se-silver-1.jpg",
                            Name = "Huawei Nova 10 SE 8GB RAM - 256GB - Silver",
                            Price = 13999.0,
                            Quantity = 10,
                            SpecialTag = " "
                        },
                        new
                        {
                            ID = 31,
                            BrandID = 8,
                            CategoryID = 3,
                            Description = "",
                            Image = "https://smhttp-ssl-73217.nexcesscdn.net/pub/media/catalog/product/cache/08a84a1c53d21da95cee3377f8156b2c/g/t/gt4-min_2_1_1.jpg",
                            Name = "Huawei Watch GT 4 46 mm - Brown",
                            Price = 10499.0,
                            Quantity = 8,
                            SpecialTag = " "
                        },
                        new
                        {
                            ID = 32,
                            BrandID = 8,
                            CategoryID = 2,
                            Description = "",
                            Image = "https://smhttp-ssl-73217.nexcesscdn.net/pub/media/catalog/product/cache/08a84a1c53d21da95cee3377f8156b2c/m/i/mi702--66.jpg",
                            Name = "Huawei nova Y91 - 8GB RAM - 256GB - Midnight Black",
                            Price = 13999.0,
                            Quantity = 9,
                            SpecialTag = " "
                        },
                        new
                        {
                            ID = 33,
                            BrandID = 8,
                            CategoryID = 2,
                            Description = "",
                            Image = "https://smhttp-ssl-73217.nexcesscdn.net/pub/media/catalog/product/cache/08a84a1c53d21da95cee3377f8156b2c/m/i/mi884-67.jpg",
                            Name = "Huawei nova Y61 - 4GB RAM - 64GB - Sapphire Blue",
                            Price = 6799.0,
                            Quantity = 6,
                            SpecialTag = " "
                        },
                        new
                        {
                            ID = 34,
                            BrandID = 6,
                            CategoryID = 4,
                            Description = "",
                            Image = "https://smhttp-ssl-73217.nexcesscdn.net/pub/media/catalog/product/cache/08a84a1c53d21da95cee3377f8156b2c/t/v/tv422-00-min.jpg",
                            Name = "Samsung TV 65 LED UHD Smart Built In Receiver - CU8000",
                            Price = 27899.0,
                            Quantity = 10,
                            SpecialTag = " "
                        },
                        new
                        {
                            ID = 35,
                            BrandID = 6,
                            CategoryID = 4,
                            Description = "",
                            Image = "https://smhttp-ssl-73217.nexcesscdn.net/pub/media/catalog/product/cache/08a84a1c53d21da95cee3377f8156b2c/t/v/tv187-00-min.jpg",
                            Name = "Samsung TV 43 Inch FHD LED Smart - Model",
                            Price = 14099.0,
                            Quantity = 8,
                            SpecialTag = " "
                        },
                        new
                        {
                            ID = 36,
                            BrandID = 6,
                            CategoryID = 4,
                            Description = "",
                            Image = "https://smhttp-ssl-73217.nexcesscdn.net/pub/media/catalog/product/cache/08a84a1c53d21da95cee3377f8156b2c/t/v/tv220-1-min.jpg",
                            Name = "Samsung TV 65 Inch OLED 4K UHD Smart Built In Receiver",
                            Price = 84999.0,
                            Quantity = 10,
                            SpecialTag = " "
                        },
                        new
                        {
                            ID = 37,
                            BrandID = 6,
                            CategoryID = 4,
                            Description = "",
                            Image = "https://smhttp-ssl-73217.nexcesscdn.net/pub/media/catalog/product/cache/08a84a1c53d21da95cee3377f8156b2c/t/v/tv422-00-min_1.jpg",
                            Name = "Samsung TV 55 LED UHD Smart Built In Receiver ",
                            Price = 23699.0,
                            Quantity = 6,
                            SpecialTag = " "
                        },
                        new
                        {
                            ID = 38,
                            BrandID = 9,
                            CategoryID = 4,
                            Description = "",
                            Image = "https://smhttp-ssl-73217.nexcesscdn.net/pub/media/catalog/product/cache/08a84a1c53d21da95cee3377f8156b2c/t/v/tv770-00-min.jpg",
                            Name = "LG TV 43 LED UHD Smart Built In Receiver",
                            Price = 16499.0,
                            Quantity = 8,
                            SpecialTag = " "
                        },
                        new
                        {
                            ID = 39,
                            BrandID = 9,
                            CategoryID = 4,
                            Description = "",
                            Image = "https://smhttp-ssl-73217.nexcesscdn.net/pub/media/catalog/product/cache/08a84a1c53d21da95cee3377f8156b2c/t/v/tv775-1_1_1_1.jpg",
                            Name = "LG 55 LED UHD Smart Built In Receiver with Magic Remote",
                            Price = 21699.0,
                            Quantity = 12,
                            SpecialTag = " "
                        },
                        new
                        {
                            ID = 40,
                            BrandID = 7,
                            CategoryID = 5,
                            Description = "",
                            Image = "https://smhttp-ssl-73217.nexcesscdn.net/pub/media/catalog/product/cache/08a84a1c53d21da95cee3377f8156b2c/h/p/hp291-1.jpg",
                            Name = "Xiaomi Redmi Buds 3 Pro - Glacier Gray",
                            Price = 1100.0,
                            Quantity = 8,
                            SpecialTag = " "
                        },
                        new
                        {
                            ID = 41,
                            BrandID = 7,
                            CategoryID = 5,
                            Description = "",
                            Image = "https://smhttp-ssl-73217.nexcesscdn.net/pub/media/catalog/product/cache/08a84a1c53d21da95cee3377f8156b2c/h/p/hp294-1-min.jpg",
                            Name = "Xiaomi Redmi Buds 3T Pro - Aurora Green",
                            Price = 4200.0,
                            Quantity = 10,
                            SpecialTag = " "
                        },
                        new
                        {
                            ID = 42,
                            BrandID = 7,
                            CategoryID = 5,
                            Description = "",
                            Image = "https://smhttp-ssl-73217.nexcesscdn.net/pub/media/catalog/product/cache/08a84a1c53d21da95cee3377f8156b2c/h/p/hp760-11-min_1.jpg",
                            Name = "Xiaomi Buds 3 TWS Earphone - White",
                            Price = 2899.0,
                            Quantity = 5,
                            SpecialTag = " "
                        },
                        new
                        {
                            ID = 43,
                            BrandID = 1,
                            CategoryID = 4,
                            Description = "",
                            Image = "https://smhttp-ssl-73217.nexcesscdn.net/pub/media/catalog/product/cache/08a84a1c53d21da95cee3377f8156b2c/h/p/hp252-12.jpg",
                            Name = "Apple AirPods 3rd Generation - White",
                            Price = 10899.0,
                            Quantity = 10,
                            SpecialTag = " "
                        });
                });

            modelBuilder.Entity("Group_4_Intake_44.Models.Shopping_Cart", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Shopping Cart");
                });

            modelBuilder.Entity("Group_4_Intake_44.Models.Store", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("CarNumbers")
                        .HasColumnType("int");

                    b.Property<int?>("Lat")
                        .HasColumnType("int");

                    b.Property<int?>("Long")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("Stores");
                });

            modelBuilder.Entity("Group_4_Intake_44.Models.Store_Product", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("ProductID")
                        .HasColumnType("int");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<int?>("StoreID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ProductID");

                    b.HasIndex("StoreID");

                    b.ToTable("Store Product");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Group_4_Intake_44.Models.Cart_Item", b =>
                {
                    b.HasOne("Group_4_Intake_44.Models.Product", "Product")
                        .WithMany("Cart_Items")
                        .HasForeignKey("ProductID")
                        .HasConstraintName("FK_Cart Items_Product");

                    b.HasOne("Group_4_Intake_44.Models.Shopping_Cart", "ShoppingCart")
                        .WithMany("Cart_Items")
                        .HasForeignKey("ShoppingCartID")
                        .HasConstraintName("FK_Cart Items_Shopping Cart");

                    b.Navigation("Product");

                    b.Navigation("ShoppingCart");
                });

            modelBuilder.Entity("Group_4_Intake_44.Models.OrderHeader", b =>
                {
                    b.HasOne("Group_4_Intake_44.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Group_4_Intake_44.Models.Order_Item", b =>
                {
                    b.HasOne("Group_4_Intake_44.Models.OrderHeader", "OrederHearder")
                        .WithMany("Order_Items")
                        .HasForeignKey("OrederHearderID")
                        .HasConstraintName("FK_Order Items_OrderHeader");

                    b.HasOne("Group_4_Intake_44.Models.Product", "Product")
                        .WithMany("Order_Items")
                        .HasForeignKey("ProductID")
                        .HasConstraintName("FK_Order Items_Product");

                    b.Navigation("OrederHearder");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Group_4_Intake_44.Models.Product", b =>
                {
                    b.HasOne("Group_4_Intake_44.Models.Brand", "Brand")
                        .WithMany("Products")
                        .HasForeignKey("BrandID")
                        .HasConstraintName("FK_Product_Brand");

                    b.HasOne("Group_4_Intake_44.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryID")
                        .HasConstraintName("FK_Product_Category");

                    b.Navigation("Brand");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Group_4_Intake_44.Models.Store_Product", b =>
                {
                    b.HasOne("Group_4_Intake_44.Models.Product", "Product")
                        .WithMany("Store_Products")
                        .HasForeignKey("ProductID")
                        .HasConstraintName("FK_Store Product_Product");

                    b.HasOne("Group_4_Intake_44.Models.Store", "Store")
                        .WithMany("Store_Products")
                        .HasForeignKey("StoreID")
                        .HasConstraintName("FK_Store Product_Stores");

                    b.Navigation("Product");

                    b.Navigation("Store");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Group_4_Intake_44.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Group_4_Intake_44.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Group_4_Intake_44.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Group_4_Intake_44.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Group_4_Intake_44.Models.Brand", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Group_4_Intake_44.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Group_4_Intake_44.Models.OrderHeader", b =>
                {
                    b.Navigation("Order_Items");
                });

            modelBuilder.Entity("Group_4_Intake_44.Models.Product", b =>
                {
                    b.Navigation("Cart_Items");

                    b.Navigation("Order_Items");

                    b.Navigation("Store_Products");
                });

            modelBuilder.Entity("Group_4_Intake_44.Models.Shopping_Cart", b =>
                {
                    b.Navigation("Cart_Items");
                });

            modelBuilder.Entity("Group_4_Intake_44.Models.Store", b =>
                {
                    b.Navigation("Store_Products");
                });
#pragma warning restore 612, 618
        }
    }
}
